MYDIR:=$(abspath $(dir $(lastword $(MAKEFILE_LIST))))

SOURCEFILES+=$(addprefix $(MYDIR)/, sleep.c)
INCLUDEPATH+=$(MYDIR)
SOURCEPATH+=$(MYDIR)

.SUFFIXES:

### Optimization setting. $make OPTI=0 for easier debugging of changed source file(s)
ifndef OPTI
  OPTI=3
endif

### Compiler definitions
CC       = gcc
LD       = gcc
AS       = as
AR       = ar
ELF_SIZE = size -C --mcu=$(AVRMCU)
OBJCOPY  = objcopy
STRIP    = strip
CFLAGSNO = -Wall
CFLAGS   += $(CFLAGSNO) -O$(OPTI) -ggdb

LDFLAGS  +=  -Wl,-Map=$(BUILDROOT)/$(PROJECT).map


### Setup directory search path for source files

PROJECTTARGETS:=$(BUILDROOT)/$(PROJECT).elf
#PROJECTTARGETS+=$(BUILDROOT)/$(PROJECT).hex
#PROJECTTARGETS+=$(BUILDROOT)/$(PROJECT).srec
#PROJECTTARGETS+=$(BUILDROOT)/$(PROJECT).eep


### Compilation rules



%.ihex: %.out
	$(OBJCOPY) $^ -O ihex $@

.PRECIOUS: %.ihex


%.hex: %.elf
	$(OBJCOPY) -R .eeprom -R .fuse -R .signature $^ -O ihex $@

.PRECIOUS: %.hex


%.eep: %.elf
	-$(OBJCOPY) -j .eeprom --set-section-flags=.eeprom="alloc,load" \
	--change-section-lma .eeprom=0 -O ihex $^ $@

.PRECIOUS: %.eep


%.srec: %.elf
	$(OBJCOPY) -O srec $< $@

.PRECIOUS: %.srec


### Upload image
#Let avrdude use defaults if port or programmer not defined
ifdef AVRDUDE_PORT
 AVRDUDE_PORT:=-P $(AVRDUDE_PORT)
endif
ifdef AVRDUDE_PROGRAMMER
 AVRDUDE_PROGRAMMER:=-c $(AVRDUDE_PROGRAMMER)
endif
%.u: $(BUILDROOT)/%.hex
	avrdude -v $(AVRDUDE_OPTIONS) $(AVRDUDE_PORT) $(AVRDUDE_PROGRAMMER) -p $(AVRMCU) -U flash:w:$<

%.eu: $(BUILDROOT)/%.eep
	avrdude ${AVRDUDE_OPTIONS} -P ${AVRDUDE_PORT} -c ${AVRDUDE_PROGRAMMER} -p ${AVRMCU} -U eeprom:w:$<


#avrdude ${AVRDUDE_OPTIONS} -P ${AVRDUDE_PORT} -c ${AVRDUDE_PROGRAMMER} -p ${AVRMCU} -U flash:w:$<
#echo $(AVRDUDE_OPTIONS) $(AVRDUDE_PORT) $(AVRDUDE_PROGRAMMER) -p $(AVRMCU) -U flash:w:$<

%.c.o :
	@echo "Rule c->o at de/linux"
	mkdir -p $(dir $@)
	$(CC) $(CFLAGS) -O$(OPTI) -c $< -o $@
#	$(CC) $(CFLAGS) $(notdir $*).c -c -o $@




